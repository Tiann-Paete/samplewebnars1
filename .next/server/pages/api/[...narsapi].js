"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/[...narsapi]";
exports.ids = ["pages/api/[...narsapi]"];
exports.modules = {

/***/ "bcrypt":
/*!*************************!*\
  !*** external "bcrypt" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("bcrypt");

/***/ }),

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("jsonwebtoken");

/***/ }),

/***/ "mysql2/promise":
/*!*********************************!*\
  !*** external "mysql2/promise" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("mysql2/promise");

/***/ }),

/***/ "next-iron-session":
/*!************************************!*\
  !*** external "next-iron-session" ***!
  \************************************/
/***/ ((module) => {

module.exports = require("next-iron-session");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2F%5B...narsapi%5D&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5C%5B...narsapi%5D.js&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2F%5B...narsapi%5D&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5C%5B...narsapi%5D.js&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_narsapi_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src\\pages\\api\\[...narsapi].js */ \"(api)/./src/pages/api/[...narsapi].js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_narsapi_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_narsapi_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/[...narsapi]\",\n        pathname: \"/api/[...narsapi]\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_narsapi_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRiU1Qi4uLm5hcnNhcGklNUQmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZzcmMlNUNwYWdlcyU1Q2FwaSU1QyU1Qi4uLm5hcnNhcGklNUQuanMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDK0Q7QUFDL0Q7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHNEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyxzREFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uYXJzLz9lNDZmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmNcXFxccGFnZXNcXFxcYXBpXFxcXFsuLi5uYXJzYXBpXS5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL1suLi5uYXJzYXBpXVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL1suLi5uYXJzYXBpXVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2F%5B...narsapi%5D&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5C%5B...narsapi%5D.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/pages/api/[...narsapi].js":
/*!***************************************!*\
  !*** ./src/pages/api/[...narsapi].js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var bcrypt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcrypt */ \"bcrypt\");\n/* harmony import */ var bcrypt__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bcrypt__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _utils_db__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/db */ \"(api)/./src/utils/db.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_iron_session__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next-iron-session */ \"next-iron-session\");\n/* harmony import */ var next_iron_session__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_iron_session__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\nconst handler = async (req, res)=>{\n    const { method } = req;\n    const { pathname } = (0,url__WEBPACK_IMPORTED_MODULE_0__.parse)(req.url, true);\n    try {\n        switch(method){\n            case \"GET\":\n                if (pathname === \"/api/check-auth\") {\n                    handleCheckAuth(req, res);\n                } else if (pathname.startsWith(\"/api/order/\")) {\n                    await handleGetOrder(req, res);\n                } else if (pathname.startsWith(\"/api/order-tracking/\")) {\n                    await handleOrderTracking(req, res);\n                } else if (pathname === \"/api/order-history\") {\n                    await handleOrderHistory(req, res);\n                } else if (pathname === \"/api/all-orders\") {\n                    await handleAllOrders(req, res);\n                } else if (pathname === \"/api/logout\") {\n                    await handleLogout(req, res);\n                } else if (pathname === \"/api/user\") {\n                    handleGetUser(req, res);\n                } else if (pathname === \"/api/products\") {\n                    await handleGetProducts(req, res);\n                } else if (pathname.startsWith(\"/api/products/category/\")) {\n                    const category = pathname.split(\"/\").pop();\n                    await handleGetProductsByCategory(req, res, category);\n                } else if (pathname === \"/api/cart\") {\n                    handleGetCart(req, res);\n                } else if (pathname === \"/api/limited-items\") {\n                    await handleGetLimitedItems(req, res);\n                } else if (pathname === \"/api/categories\") {\n                    await handleGetCategories(req, res);\n                } else if (pathname === \"/api/search\") {\n                    await handleSearch(req, res);\n                } else {\n                    res.status(404).json({\n                        error: \"Not Found\"\n                    });\n                }\n                break;\n            case \"POST\":\n                if (pathname === \"/api/signup\") {\n                    await handleSignup(req, res);\n                } else if (pathname === \"/api/signin\") {\n                    await handleSignin(req, res);\n                } else if (pathname === \"/api/place-order\") {\n                    await handlePlaceOrder(req, res);\n                } else if (pathname.startsWith(\"/api/cancel-order/\")) {\n                    await handleCancelOrder(req, res);\n                } else if (pathname.startsWith(\"/api/submit-ratings/\")) {\n                    await handleSubmitRatings(req, res);\n                } else if (pathname === \"/api/cart/add\") {\n                    handleAddToCart(req, res);\n                }\n                break;\n            case \"PUT\":\n                if (pathname === \"/api/cart/update\") {\n                    handleUpdateCart(req, res);\n                }\n                break;\n            case \"DELETE\":\n                if (pathname.startsWith(\"/api/cart/remove/\")) {\n                    handleRemoveFromCart(req, res);\n                } else if (pathname.startsWith(\"/api/cancel-order/\")) {\n                    await handleCancelOrder(req, res);\n                }\n                break;\n            default:\n                res.setHeader(\"Allow\", [\n                    \"GET\",\n                    \"POST\",\n                    \"PUT\",\n                    \"DELETE\"\n                ]);\n                res.status(405).end(`Method ${method} Not Allowed`);\n        }\n    } catch (error) {\n        console.error(error);\n        res.status(500).json({\n            error: \"An error occurred while processing your request\"\n        });\n    }\n};\n//Signup, Signin and User checking\nasync function handleSignup(req, res) {\n    const { firstname, lastname, address, mobile, email, password } = req.body;\n    try {\n        const existingUser = await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"SELECT * FROM registered_users WHERE email = ?\", [\n            email\n        ]);\n        if (existingUser.length > 0) {\n            return res.status(400).json({\n                error: \"Email is already in use\"\n            });\n        }\n        const hashedPassword = await bcrypt__WEBPACK_IMPORTED_MODULE_1___default().hash(password, 10);\n        const result = await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"INSERT INTO registered_users (firstName, lastName, address, contact, email, password) VALUES (?, ?, ?, ?, ?, ?)\", [\n            firstname,\n            lastname,\n            address,\n            mobile,\n            email,\n            hashedPassword\n        ]);\n        await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"INSERT INTO user_login (user_firstname, user_lastname, contact, email) VALUES (?, ?, ?, ?)\", [\n            firstname,\n            lastname,\n            mobile,\n            email\n        ]);\n        const token = (0,jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__.sign)({\n            userId: result.insertId\n        }, process.env.JWT_SECRET, {\n            expiresIn: \"6h\"\n        });\n        res.status(200).json({\n            message: \"Signup successful\",\n            token\n        });\n    } catch (error) {\n        console.error(\"Signup error:\", error);\n        res.status(500).json({\n            error: \"An error occurred during signup\"\n        });\n    }\n}\nasync function handleSignin(req, res) {\n    const { email, password } = req.body;\n    try {\n        const users = await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"SELECT * FROM registered_users WHERE email = ?\", [\n            email\n        ]);\n        if (users.length === 0) {\n            return res.status(401).json({\n                success: false,\n                error: \"Invalid email or password\"\n            });\n        }\n        const user = users[0];\n        const match = await bcrypt__WEBPACK_IMPORTED_MODULE_1___default().compare(password, user.password);\n        if (!match) {\n            return res.status(401).json({\n                success: false,\n                error: \"Invalid email or password\"\n            });\n        }\n        const token = (0,jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__.sign)({\n            userId: user.id\n        }, process.env.JWT_SECRET, {\n            expiresIn: \"6h\"\n        });\n        req.session.user = {\n            id: user.id,\n            firstName: user.firstName,\n            email: user.email\n        };\n        await req.session.save();\n        await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"UPDATE user_login SET logout_time = NULL WHERE email = ?\", [\n            email\n        ]);\n        const loginTime = new Date();\n        await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"UPDATE user_login SET login_time = ? WHERE email = ?\", [\n            loginTime,\n            email\n        ]);\n        res.setHeader(\"Set-Cookie\", `authToken=${token}; HttpOnly; Path=/; Max-Age=3600; SameSite=Strict${ false ? 0 : \"\"}`);\n        res.status(200).json({\n            success: true,\n            message: \"Signin successful\",\n            token,\n            firstName: user.firstName\n        });\n    } catch (error) {\n        console.error(\"Signin error:\", error);\n        res.status(500).json({\n            success: false,\n            error: \"An error occurred during signin\"\n        });\n    }\n}\nfunction handleCheckAuth(req, res) {\n    const token = req.headers.authorization?.split(\" \")[1];\n    if (!token) {\n        return res.json({\n            isAuthenticated: false\n        });\n    }\n    try {\n        const decoded = (0,jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__.verify)(token, process.env.JWT_SECRET);\n        const userId = decoded.userId;\n        if (req.session.user && req.session.user.id === userId) {\n            res.json({\n                isAuthenticated: true,\n                user: {\n                    id: req.session.user.id,\n                    firstName: req.session.user.firstName,\n                    email: req.session.user.email\n                }\n            });\n        } else {\n            req.session.user = {\n                id: userId\n            };\n            res.json({\n                isAuthenticated: true,\n                user: {\n                    id: userId\n                }\n            });\n        }\n    } catch (error) {\n        console.error(\"Token verification error:\", error);\n        res.json({\n            isAuthenticated: false\n        });\n    }\n}\nfunction handleGetUser(req, res) {\n    const authHeader = req.headers.authorization;\n    const token = authHeader && authHeader.split(\" \")[1];\n    if (!token) {\n        console.log(\"No token provided for /api/user\");\n        return res.status(401).json({\n            success: false,\n            error: \"No token provided\"\n        });\n    }\n    try {\n        const decoded = (0,jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__.verify)(token, process.env.JWT_SECRET);\n        (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"SELECT id, firstName, email FROM registered_users WHERE id = ?\", [\n            decoded.userId\n        ]).then((users)=>{\n            if (users.length === 0) {\n                console.log(`User not found for id: ${decoded.userId}`);\n                return res.status(404).json({\n                    success: false,\n                    error: \"User not found\"\n                });\n            }\n            const user = users[0];\n            res.status(200).json({\n                success: true,\n                firstName: user.firstName,\n                email: user.email\n            });\n        }).catch((error)=>{\n            console.error(\"Database query error:\", error);\n            res.status(500).json({\n                success: false,\n                error: \"Database error\"\n            });\n        });\n    } catch (error) {\n        console.error(\"Get user error:\", error);\n        if (error.name === \"TokenExpiredError\") {\n            return res.status(401).json({\n                success: false,\n                error: \"Token expired\",\n                code: \"TOKEN_EXPIRED\"\n            });\n        }\n        res.status(401).json({\n            success: false,\n            error: \"Invalid token\"\n        });\n    }\n}\nasync function handleLogout(req, res) {\n    try {\n        const userEmail = req.headers[\"user-email\"];\n        console.log(\"Received logout request for user:\", userEmail);\n        if (userEmail) {\n            const logoutTime = new Date();\n            console.log(\"Updating logout time:\", logoutTime);\n            try {\n                const result = await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"UPDATE user_login SET logout_time = ? WHERE email = ? AND logout_time IS NULL\", [\n                    logoutTime,\n                    userEmail\n                ]);\n                console.log(\"Database update result:\", result);\n                if (result.affectedRows === 0) {\n                    console.log(\"No rows updated. User might not exist in user_login table or already logged out.\");\n                } else {\n                    console.log(\"Logout time updated successfully for user:\", userEmail);\n                }\n            } catch (dbError) {\n                console.error(\"Database error:\", dbError);\n                return res.status(500).json({\n                    success: false,\n                    error: \"Database error during logout\"\n                });\n            }\n        } else {\n            console.log(\"No user email provided in request headers\");\n            return res.status(400).json({\n                success: false,\n                error: \"User email not provided\"\n            });\n        }\n        res.setHeader(\"Set-Cookie\", \"authToken=; HttpOnly; Path=/; Max-Age=0; SameSite=Strict\");\n        res.status(200).json({\n            success: true,\n            message: \"Logout successful\"\n        });\n    } catch (error) {\n        console.error(\"Logout error:\", error);\n        res.status(500).json({\n            success: false,\n            error: \"An error occurred during logout\"\n        });\n    }\n}\n//Showing the Products\nasync function handleSearch(req, res) {\n    const { query: searchQuery } = (0,url__WEBPACK_IMPORTED_MODULE_0__.parse)(req.url, true).query;\n    if (!searchQuery) {\n        return res.status(400).json({\n            error: \"Search query is required\"\n        });\n    }\n    try {\n        const searchTerms = searchQuery.split(/\\s+/).map((term)=>`%${term}%`);\n        const placeholders = searchTerms.map(()=>\"(p.name LIKE ? OR p.category LIKE ?)\").join(\" AND \");\n        const sql = `\r\n      SELECT p.*, \r\n             COALESCE(AVG(pr.rating), 5) as avg_rating,\r\n             COUNT(pr.id) as rating_count,\r\n             COALESCE(ps.quantity, 0) as stock_quantity\r\n      FROM products p\r\n      LEFT JOIN product_ratings pr ON p.id = pr.product_id\r\n      LEFT JOIN product_stocks ps ON p.id = ps.product_id\r\n      WHERE p.deleted = 0 AND (${placeholders})\r\n      GROUP BY p.id\r\n    `;\n        const params = searchTerms.flatMap((term)=>[\n                term,\n                term\n            ]);\n        const results = await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(sql, params);\n        res.status(200).json(results);\n    } catch (error) {\n        console.error(\"Error searching products:\", error);\n        res.status(500).json({\n            error: \"An error occurred while searching products\",\n            details: error.message\n        });\n    }\n}\nasync function handleGetProducts(req, res) {\n    try {\n        const productsQuery = `\r\n      SELECT p.*, \r\n             COALESCE(AVG(pr.rating), 5) as avg_rating,\r\n             COUNT(pr.id) as rating_count,\r\n             COALESCE(ps.quantity, 0) as stock_quantity\r\n      FROM products p\r\n      LEFT JOIN product_ratings pr ON p.id = pr.product_id\r\n      LEFT JOIN product_stocks ps ON p.id = ps.product_id\r\n      WHERE p.deleted = 0\r\n      GROUP BY p.id\r\n    `;\n        const products = await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(productsQuery);\n        res.status(200).json(products);\n    } catch (error) {\n        console.error(\"Error fetching products:\", error);\n        res.status(500).json({\n            error: \"An error occurred while fetching products\",\n            details: error.message\n        });\n    }\n}\nasync function handleGetProductsByCategory(req, res, category) {\n    try {\n        const decodedCategory = decodeURIComponent(category);\n        console.log(`Attempting to fetch products for category: ${decodedCategory}`);\n        const productsQuery = `\r\n      SELECT p.*, \r\n             COALESCE(AVG(pr.rating), 5) as avg_rating,\r\n             COUNT(pr.id) as rating_count,\r\n             COALESCE(ps.quantity, 0) as stock_quantity\r\n      FROM products p\r\n      LEFT JOIN product_ratings pr ON p.id = pr.product_id\r\n      LEFT JOIN product_stocks ps ON p.id = ps.product_id\r\n      WHERE p.category = ? AND p.deleted = 0\r\n      GROUP BY p.id\r\n    `;\n        const products = await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(productsQuery, [\n            decodedCategory\n        ]);\n        console.log(`Fetched ${products.length} products for category: ${decodedCategory}`);\n        res.status(200).json(products);\n    } catch (error) {\n        console.error(\"Error fetching products by category:\", error);\n        res.status(500).json({\n            error: \"An error occurred while fetching products by category\",\n            details: error.message,\n            stack: error.stack\n        });\n    }\n}\nasync function handleGetLimitedItems(req, res) {\n    try {\n        console.log(\"Attempting to fetch limited items\");\n        const limitedItemsQuery = `\r\n      SELECT p.*, \r\n             COALESCE(AVG(pr.rating), 5) as avg_rating,\r\n             COUNT(pr.id) as rating_count,\r\n             COALESCE(ps.quantity, 0) as stock_quantity\r\n      FROM products p\r\n      LEFT JOIN product_ratings pr ON p.id = pr.product_id\r\n      LEFT JOIN product_stocks ps ON p.id = ps.product_id\r\n      WHERE p.category = 'Limited Items' AND p.deleted = 0\r\n      GROUP BY p.id\r\n    `;\n        const limitedItems = await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(limitedItemsQuery);\n        console.log(\"Query result:\", limitedItems);\n        res.status(200).json(limitedItems);\n    } catch (error) {\n        console.error(\"Error fetching limited items:\", error);\n        res.status(500).json({\n            error: \"An error occurred while fetching limited items\",\n            details: error.message,\n            stack: error.stack\n        });\n    }\n}\nasync function handleGetCategories(req, res) {\n    try {\n        const categories = await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(`\r\n        SELECT DISTINCT category \r\n        FROM products \r\n        WHERE deleted = 0 AND category != 'Limited'\r\n      `);\n        const formattedCategories = categories.map((item)=>({\n                id: item.category,\n                name: item.category\n            }));\n        res.status(200).json(formattedCategories);\n    } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n        res.status(500).json({\n            error: \"An error occurred while fetching categories\",\n            details: error.message\n        });\n    }\n}\n//Placing or Checkout an Order\nasync function handlePlaceOrder(req, res) {\n    const authHeader = req.headers.authorization;\n    if (!authHeader) {\n        console.log(\"No Authorization header found\");\n        return res.status(401).json({\n            error: \"No token provided\"\n        });\n    }\n    const token = authHeader.split(\" \")[1];\n    if (!token) {\n        console.log(\"Token not found in Authorization header\");\n        return res.status(401).json({\n            error: \"No token provided\"\n        });\n    }\n    try {\n        const decoded = (0,jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__.verify)(token, process.env.JWT_SECRET);\n        const userId = decoded.userId;\n        const { billingInfo, paymentMethod, cartItems, subtotal, delivery, total } = req.body;\n        const trackingNumber = crypto__WEBPACK_IMPORTED_MODULE_4___default().randomBytes(8).toString(\"hex\").toUpperCase();\n        await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"START TRANSACTION\");\n        // Insert the order\n        const orderResult = await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"INSERT INTO orders (user_id, full_name, phone_number, address, city, state_province, postal_code, delivery_address, payment_method, subtotal, delivery_fee, total, tracking_number, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\", [\n            userId,\n            billingInfo.fullName,\n            billingInfo.phoneNumber,\n            billingInfo.address,\n            billingInfo.city,\n            billingInfo.stateProvince,\n            billingInfo.postalCode,\n            billingInfo.deliveryAddress,\n            paymentMethod,\n            subtotal,\n            delivery,\n            total,\n            trackingNumber,\n            \"Order Placed\"\n        ]);\n        const orderId = orderResult.insertId;\n        // Insert ordered products and update stock quantity\n        for (const item of cartItems){\n            // Check if there's enough stock before placing the order\n            const [stockRecord] = await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"SELECT quantity FROM product_stocks WHERE product_id = ?\", [\n                item.id\n            ]);\n            if (!stockRecord || stockRecord.quantity < item.quantity) {\n                await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"ROLLBACK\");\n                return res.status(400).json({\n                    error: `Not enough stock for product: ${item.name}`\n                });\n            }\n            await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"INSERT INTO ordered_products (name, product_id, order_id, quantity, price) VALUES (?, ?, ?, ?, ?)\", [\n                item.name,\n                item.id,\n                orderId,\n                item.quantity,\n                item.price\n            ]);\n            // Update stock quantity in product_stocks table\n            const updateResult = await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"UPDATE product_stocks SET quantity = quantity - ? WHERE product_id = ?\", [\n                item.quantity,\n                item.id\n            ]);\n            if (updateResult.affectedRows === 0) {\n                await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"ROLLBACK\");\n                return res.status(400).json({\n                    error: `Not enough stock for product: ${item.name}`\n                });\n            }\n        }\n        await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"COMMIT\");\n        res.json({\n            success: true,\n            orderId,\n            trackingNumber\n        });\n    } catch (error) {\n        await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"ROLLBACK\");\n        console.error(\"Error placing order:\", error);\n        if (error.name === \"JsonWebTokenError\") {\n            return res.status(401).json({\n                error: \"Invalid token\"\n            });\n        }\n        res.status(500).json({\n            error: \"An error occurred while placing the order\"\n        });\n    }\n}\n//Order Tracking after Checkout or Placing an Order\nasync function handleGetOrder(req, res) {\n    const authHeader = req.headers.authorization;\n    if (!authHeader) {\n        return res.status(401).json({\n            error: \"No token provided\"\n        });\n    }\n    const token = authHeader.split(\" \")[1];\n    if (!token) {\n        return res.status(401).json({\n            error: \"No token provided\"\n        });\n    }\n    try {\n        const decoded = (0,jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__.verify)(token, process.env.JWT_SECRET);\n        const userId = decoded.userId;\n        const orderId = req.query.orderId || req.url.split(\"/\").pop();\n        const results = await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(`\r\n      SELECT o.*, op.name, op.product_id, op.quantity, op.price, p.image_url\r\n      FROM orders o\r\n      JOIN ordered_products op ON o.id = op.order_id\r\n      JOIN products p ON op.product_id = p.id\r\n      WHERE o.id = ? AND o.user_id = ?\r\n    `, [\n            orderId,\n            userId\n        ]);\n        if (results.length === 0) {\n            return res.status(404).json({\n                error: \"Order not found\"\n            });\n        }\n        const orderDetails = {\n            orderId: results[0].id,\n            trackingNumber: results[0].tracking_number,\n            status: results[0].status,\n            billingInfo: {\n                fullName: results[0].full_name,\n                phoneNumber: results[0].phone_number,\n                address: results[0].address,\n                city: results[0].city,\n                stateProvince: results[0].state_province,\n                postalCode: results[0].postal_code,\n                deliveryAddress: results[0].delivery_address\n            },\n            paymentMethod: results[0].payment_method,\n            items: results.map((item)=>({\n                    id: item.product_id,\n                    name: item.name,\n                    quantity: item.quantity,\n                    price: item.price,\n                    imageUrl: item.image_url\n                })),\n            subtotal: results[0].subtotal,\n            delivery: results[0].delivery_fee,\n            total: results[0].total\n        };\n        res.json(orderDetails);\n    } catch (error) {\n        console.error(\"Error fetching order details:\", error);\n        if (error.name === \"JsonWebTokenError\") {\n            return res.status(401).json({\n                error: \"Invalid token\"\n            });\n        }\n        res.status(500).json({\n            error: \"An error occurred while fetching order details\"\n        });\n    }\n}\n//Order History\nasync function handleAllOrders(req, res) {\n    const authHeader = req.headers.authorization;\n    if (!authHeader) {\n        return res.status(401).json({\n            error: \"No token provided\"\n        });\n    }\n    const token = authHeader.split(\" \")[1];\n    if (!token) {\n        return res.status(401).json({\n            error: \"No token provided\"\n        });\n    }\n    try {\n        const decoded = (0,jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__.verify)(token, process.env.JWT_SECRET);\n        const userId = decoded.userId;\n        const orders = await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(`\r\n      SELECT id, tracking_number, status, order_date, total\r\n      FROM orders\r\n      WHERE user_id = ?\r\n      ORDER BY order_date DESC\r\n    `, [\n            userId\n        ]);\n        res.status(200).json(orders);\n    } catch (error) {\n        if (error.name === \"JsonWebTokenError\") {\n            return res.status(401).json({\n                error: \"Invalid token\"\n            });\n        }\n        console.error(\"Error fetching all orders:\", error);\n        res.status(500).json({\n            error: \"An error occurred while fetching orders\",\n            details: error.message\n        });\n    }\n}\nasync function handleCancelOrder(req, res) {\n    const authHeader = req.headers.authorization;\n    if (!authHeader) {\n        return res.status(401).json({\n            error: \"No token provided\"\n        });\n    }\n    const token = authHeader.split(\" \")[1];\n    if (!token) {\n        return res.status(401).json({\n            error: \"No token provided\"\n        });\n    }\n    try {\n        const decoded = (0,jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__.verify)(token, process.env.JWT_SECRET);\n        const userId = decoded.userId;\n        const orderId = req.url.split(\"/\").pop();\n        const result = await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(`\r\n      UPDATE orders\r\n      SET status = 'Cancelled'\r\n      WHERE id = ? AND user_id = ? AND status = 'Order Placed'\r\n    `, [\n            orderId,\n            userId\n        ]);\n        if (result.affectedRows === 0) {\n            return res.status(400).json({\n                error: \"Order not found or cannot be cancelled\"\n            });\n        }\n        res.json({\n            success: true,\n            message: \"Order cancelled successfully\"\n        });\n    } catch (error) {\n        if (error.name === \"JsonWebTokenError\") {\n            return res.status(401).json({\n                error: \"Invalid token\"\n            });\n        }\n        console.error(\"Error cancelling order:\", error);\n        res.status(500).json({\n            error: \"An error occurred while cancelling the order\"\n        });\n    }\n}\nasync function handleOrderHistory(req, res) {\n    const authHeader = req.headers.authorization;\n    if (!authHeader) {\n        return res.status(401).json({\n            error: \"No token provided\"\n        });\n    }\n    const token = authHeader.split(\" \")[1];\n    if (!token) {\n        return res.status(401).json({\n            error: \"No token provided\"\n        });\n    }\n    try {\n        const decoded = (0,jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__.verify)(token, process.env.JWT_SECRET);\n        const userId = decoded.userId;\n        const orders = await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(`\r\n      SELECT o.id, o.tracking_number, o.status, o.order_date, o.total, o.is_rated,\r\n             GROUP_CONCAT(op.name SEPARATOR ', ') AS products\r\n      FROM orders o\r\n      JOIN ordered_products op ON o.id = op.order_id\r\n      WHERE o.user_id = ?\r\n      GROUP BY o.id\r\n      ORDER BY o.order_date DESC\r\n    `, [\n            userId\n        ]);\n        res.status(200).json(orders);\n    } catch (error) {\n        if (error.name === \"JsonWebTokenError\") {\n            return res.status(401).json({\n                error: \"Invalid token\"\n            });\n        }\n        console.error(\"Error fetching order history:\", error);\n        res.status(500).json({\n            error: \"An error occurred while fetching order history\",\n            details: error.message\n        });\n    }\n}\nasync function handleSubmitRatings(req, res) {\n    const authHeader = req.headers.authorization;\n    if (!authHeader) {\n        return res.status(401).json({\n            error: \"No token provided\"\n        });\n    }\n    const token = authHeader.split(\" \")[1];\n    if (!token) {\n        return res.status(401).json({\n            error: \"No token provided\"\n        });\n    }\n    try {\n        const decoded = (0,jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__.verify)(token, process.env.JWT_SECRET);\n        const userId = decoded.userId;\n        const orderId = req.url.split(\"/\").pop();\n        const { ratings, feedback } = req.body;\n        // Verify that the order belongs to the user\n        const orderCheck = await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"SELECT id FROM orders WHERE id = ? AND user_id = ?\", [\n            orderId,\n            userId\n        ]);\n        if (orderCheck.length === 0) {\n            return res.status(403).json({\n                error: \"Unauthorized to rate this order\"\n            });\n        }\n        // Start a transaction\n        await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"START TRANSACTION\");\n        try {\n            // Insert ratings for each product\n            for (const [productId, rating] of Object.entries(ratings)){\n                await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"INSERT INTO product_ratings (order_id, product_id, rating) VALUES (?, ?, ?)\", [\n                    orderId,\n                    productId,\n                    rating\n                ]);\n            }\n            // Insert feedback\n            if (feedback) {\n                await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"INSERT INTO order_feedback (order_id, feedback) VALUES (?, ?)\", [\n                    orderId,\n                    feedback\n                ]);\n            }\n            // Update the order to mark it as rated\n            await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"UPDATE orders SET is_rated = 1 WHERE id = ?\", [\n                orderId\n            ]);\n            // Commit the transaction\n            await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"COMMIT\");\n            res.status(200).json({\n                success: true,\n                message: \"Ratings submitted successfully\"\n            });\n        } catch (error) {\n            // If there's an error, rollback the transaction\n            await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(\"ROLLBACK\");\n            throw error;\n        }\n    } catch (error) {\n        if (error.name === \"JsonWebTokenError\") {\n            return res.status(401).json({\n                error: \"Invalid token\"\n            });\n        }\n        console.error(\"Error submitting ratings:\", error);\n        res.status(500).json({\n            error: \"An error occurred while submitting ratings\",\n            details: error.message\n        });\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_iron_session__WEBPACK_IMPORTED_MODULE_5__.withIronSession)(handler, {\n    password: process.env.SESSION_PASSWORD,\n    cookieName: \"nars_session\",\n    cookieOptions: {\n        secure: \"development\" === \"production\",\n        sameSite: \"strict\",\n        httpOnly: true\n    }\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/[...narsapi].js\n");

/***/ }),

/***/ "(api)/./src/utils/db.js":
/*!*************************!*\
  !*** ./src/utils/db.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   query: () => (/* binding */ query)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"mysql2/promise\");\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mysql2_promise__WEBPACK_IMPORTED_MODULE_0__);\n\nconst pool = mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default().createPool({\n    host: process.env.MYSQL_HOST,\n    port: parseInt(process.env.MYSQL_PORT),\n    database: process.env.MYSQL_DATABASE,\n    user: process.env.MYSQL_USER,\n    password: process.env.MYSQL_PASSWORD,\n    connectionLimit: 10,\n    waitForConnections: true,\n    queueLimit: 0\n});\nasync function query(sql, values) {\n    try {\n        const [results] = await pool.query(sql, values);\n        return results;\n    } catch (error) {\n        console.error(\"Database query error:\", error);\n        throw error;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pool);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvdXRpbHMvZGIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFtQztBQUVuQyxNQUFNQyxPQUFPRCxnRUFBZ0IsQ0FBQztJQUM1QkcsTUFBTUMsUUFBUUMsR0FBRyxDQUFDQyxVQUFVO0lBQzVCQyxNQUFNQyxTQUFTSixRQUFRQyxHQUFHLENBQUNJLFVBQVU7SUFDckNDLFVBQVVOLFFBQVFDLEdBQUcsQ0FBQ00sY0FBYztJQUNwQ0MsTUFBTVIsUUFBUUMsR0FBRyxDQUFDUSxVQUFVO0lBQzVCQyxVQUFVVixRQUFRQyxHQUFHLENBQUNVLGNBQWM7SUFDcENDLGlCQUFpQjtJQUNqQkMsb0JBQW9CO0lBQ3BCQyxZQUFZO0FBQ2Q7QUFFTyxlQUFlQyxNQUFNQyxHQUFHLEVBQUVDLE1BQU07SUFDckMsSUFBSTtRQUNGLE1BQU0sQ0FBQ0MsUUFBUSxHQUFHLE1BQU1yQixLQUFLa0IsS0FBSyxDQUFDQyxLQUFLQztRQUN4QyxPQUFPQztJQUNULEVBQUUsT0FBT0MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMseUJBQXlCQTtRQUN2QyxNQUFNQTtJQUNSO0FBQ0Y7QUFFQSxpRUFBZXRCLElBQUlBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uYXJzLy4vc3JjL3V0aWxzL2RiLmpzP2QzODQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG15c3FsIGZyb20gJ215c3FsMi9wcm9taXNlJztcclxuXHJcbmNvbnN0IHBvb2wgPSBteXNxbC5jcmVhdGVQb29sKHtcclxuICBob3N0OiBwcm9jZXNzLmVudi5NWVNRTF9IT1NULFxyXG4gIHBvcnQ6IHBhcnNlSW50KHByb2Nlc3MuZW52Lk1ZU1FMX1BPUlQpLFxyXG4gIGRhdGFiYXNlOiBwcm9jZXNzLmVudi5NWVNRTF9EQVRBQkFTRSxcclxuICB1c2VyOiBwcm9jZXNzLmVudi5NWVNRTF9VU0VSLFxyXG4gIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5NWVNRTF9QQVNTV09SRCxcclxuICBjb25uZWN0aW9uTGltaXQ6IDEwLFxyXG4gIHdhaXRGb3JDb25uZWN0aW9uczogdHJ1ZSxcclxuICBxdWV1ZUxpbWl0OiAwXHJcbn0pO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHF1ZXJ5KHNxbCwgdmFsdWVzKSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IFtyZXN1bHRzXSA9IGF3YWl0IHBvb2wucXVlcnkoc3FsLCB2YWx1ZXMpO1xyXG4gICAgcmV0dXJuIHJlc3VsdHM7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0RhdGFiYXNlIHF1ZXJ5IGVycm9yOicsIGVycm9yKTtcclxuICAgIHRocm93IGVycm9yO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcG9vbDsiXSwibmFtZXMiOlsibXlzcWwiLCJwb29sIiwiY3JlYXRlUG9vbCIsImhvc3QiLCJwcm9jZXNzIiwiZW52IiwiTVlTUUxfSE9TVCIsInBvcnQiLCJwYXJzZUludCIsIk1ZU1FMX1BPUlQiLCJkYXRhYmFzZSIsIk1ZU1FMX0RBVEFCQVNFIiwidXNlciIsIk1ZU1FMX1VTRVIiLCJwYXNzd29yZCIsIk1ZU1FMX1BBU1NXT1JEIiwiY29ubmVjdGlvbkxpbWl0Iiwid2FpdEZvckNvbm5lY3Rpb25zIiwicXVldWVMaW1pdCIsInF1ZXJ5Iiwic3FsIiwidmFsdWVzIiwicmVzdWx0cyIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/utils/db.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2F%5B...narsapi%5D&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5C%5B...narsapi%5D.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();